swagger: "2.0"
info:
  description: "Tercer proyecto Acámica"
  version: "1.0.0"
  title: "Delilah Resto"
externalDocs:
  description: Código en GitHub
  url: "https://github.com/GustavoCarrena/delilah_resto"
tags:
- name: "user"
  description: "registro y logueo de usuario"
paths: 
  
  /user/userLogin:
    post:
      tags:
      - "user"
      summary: "Logueo de usuario" 
      parameters:
      - in: "body"
        name: "body"
        description: "ingreso de usuario mediante identificación de usuario y contraseña"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
              description: "email con el cual se registró"
            user_password:
              type: "string"
              description: "password con el cual se registró"
      responses:
        "200":
          description: "ok"
          schema:
            type: "object"
            properties:
              error:
                type: "boolean"
                example: false
              status:
                type: "integer"
                example: 200
              message:
                type: "string"
                description: "mensaje respuesta"
              response:
                type: "object"
                properties:
                  ID Usuario:
                      type: "integer"
                      description: "id generado incrementalmente"
                      example: 10
                  Token: 
                      type: "string"
                      description: "Devuelve token con cada logueo con vencimiento de 1 hora "
                      example: "string con codificación MD5"
        "400":
          description: "Valores o campos nulos o incorrectos"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Email o Password incorrectos"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Error Interno del Servidor"
          schema:
            $ref: "#/definitions/Errors"

definitions:
  Errors:
    type: "object"
    properties:
      error:
        type: "boolean"
        example: true
        description: "True: indica que hubo un error"
      status:
        type: "integer"
        example: 400-500
        description: "Códigos de respuesta http de las familias 400 ó 500"
      mensaje:
        type: "string"
        description: "Mensaje que especifica el tipo de error"
      respuesta:
        type: "object"
        description: "En este campo ira información detallada del error cuando esté definido en el backend"


  
  
  
  
      